Given a binary tree root, return the maximum average value of a subtree. A subtree is defined to be some node in root including all of its descendants. A subtree average is the sum of the node values divided by the number of nodes.

Constraints

1 ≤ n ≤ 100,000 where n is the number of nodes in root




import java.util.*;

/**
 * public class Tree {
 *   int val;
 *   Tree left;
 *   Tree right;
 * }
 */

 class R
 {
     public int total;
     public int count;
 }
 
class Solution {
    public static double ans=0.0;
    public double solve(Tree root) {
        ans=0;
        calculate(root);
        return ans;
    }

    private static R calculate(Tree root)
    {
        if(root==null)
        {
            R i= new R();
            i.total=0;
            i.count=0;
            return i;
        }

        R l=calculate(root.left);
        R r=calculate(root.right);
        int total=l.total+ r.total + root.val;
        int count=l.count+ r.count+ 1;
        double f=((double)(total))/ (count );
        if(f>ans)
        {
            ans=f;
        }
        R r1=new R();
        r1.total=total;
        r1.count=count;
        return r1;

    } 
}


Time Complexity- O(n)
Space Complexity- O(1)
