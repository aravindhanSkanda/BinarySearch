Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

 

Example 1:


Input: root = [1,2,3,4,5]
Output: 3
Explanation: 3 is the length of the path [4,2,1,3] or [5,2,1,3].
Example 2:

Input: root = [1,2]
Output: 1


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private static int ans=0;
    public int maxPathSum(TreeNode root) {
        ans=root.val;
        calculate(root);
        return ans;
    }
    
    private static Integer calculate(TreeNode root)
    {
        if(root==null)
        {
            return 0;
        }
        int l=calculate(root.left);
        int r=calculate(root.right);
        int re=  Math.max(root.val + Math.max(l,r), root.val);
        ans=Math.max(ans,Math.max(re, root.val+l+r));
        return re;
        
    }
}

Time Complexity -O(n)
Space Complexity- O(1)
